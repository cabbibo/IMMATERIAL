#pragma kernel Transfer


struct Vert{
  float3 pos;
  float3 vel;
  float3 nor;
  float3 tang;
  float2 uv;
  float2 debug;
};



RWStructuredBuffer<Vert> _VertBuffer;
RWStructuredBuffer<Vert> _SkeletonBuffer;

int _VertBuffer_COUNT;
int _SkeletonBuffer_COUNT;


float _Scale;
int _VertsPerMesh;
float _Time;

float4x4 _Transform;

#include "../Chunks/safeID.cginc"

#define NR_THREADS 128
[numthreads(NR_THREADS,1,1)]
void Transfer (uint threadID : SV_GroupIndex, uint3 u3GroupID : SV_GroupID) {

  int pID = threadID + u3GroupID.x * NR_THREADS;

  if( pID < _VertBuffer_COUNT ){
    
    int sID = safeID( pID, _VertBuffer_COUNT );
    Vert p = _VertBuffer[sID];

    Vert v = _SkeletonBuffer[sID];

    p.pos = mul(_Transform , float4( v.pos ,1 )).xyz;
    p.nor = normalize(mul(_Transform , float4( v.nor ,0 )).xyz);
    p.tang = mul(_Transform , float4( v.tang ,1 )).xyz;
    p.uv  = v.uv;
    //p.debug.xy  = v1.debug  * p.triWeights.x +  v2.debug  * p.triWeights.y + v3.debug  * p.triWeights.z;

    _VertBuffer[sID] = p;


  }

}